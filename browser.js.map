{"version":3,"file":"browser.js","sources":["canvas.js","index.js"],"sourcesContent":["/**\n * Create a new Canvas object\n * From node-canvas browser.js\n * @param {number} width\n * @param {number} height\n * @returns {HTMLElement}\n */\nexports.createCanvas = function(width, height) {\n    return Object.assign(document.createElement('canvas'), { width, height });\n};\n","const { createCanvas } = require('canvas');\nconst md5 = require('md5');\nconst randomColor = require('randomcolor');\n\nconst MAX_COLORS = 2;\nconst MAX_PIXELS = 16;\nconst MAX_SIZE = 2048;\nconst MAX_PADDING_RATIO = 0.5;\n\nconst DEFAULT = {\n    id        : null,\n    hasher    : md5,\n    colors    : 2,\n    pixels    : 8,\n    size      : 128,\n    padding   : 0,\n    symmetry  : 'none',\n    scheme    : 'standard',\n    background: 'transparent',\n};\n\n/**\n * Generates a random HEX string of specific length\n * @param {number} length\n * @returns {string}\n */\nfunction unsecureRandom(length) {\n    let out = '';\n    while (out.length < length) out += Math.random().toString(16).substr(2);\n    return out.substr(0, length);\n}\n\n/**\n * Loops a string and applies MD5 until a specific length\n * @param {function} hasher\n * @param {string} str\n * @param {number} length\n * @returns {string}\n */\nfunction loopHash(hasher, str, length) {\n    let out = '';\n    let i = 0;\n    while (out.length < length) out += hasher(str + (++i > 1 ? i : ''));\n    return out.substr(0, length);\n}\n\n/**\n * Bounds a number\n * @param {number} val\n * @param {number} min\n * @param {number} max\n * @returns {number}\n */\nfunction minMax(val, min, max) {\n    return Math.max(min, Math.min(val, max));\n}\n\n/**\n * Parse an hexadecimal string\n * @param {string} str\n * @returns {number}\n */\nfunction hexdec(str) {\n    return parseInt(str, 16);\n}\n\n/**\n * Returns the minimim id length\n * @param {number} pixels\n * @param {number} colors\n * @returns {number}\n */\nfunction getMinIdLength(pixels, colors) {\n    // 24 bits by color + 1 or 2 bits by pixel (given MAX_COLORS = 2)\n    return (colors * 24 + colors * pixels * pixels) / 4;\n}\n\n/**\n * Cleanups options\n * @param {object|string} options\n * @returns {object}\n */\nfunction getOptions(options) {\n    if (typeof options === 'string') {\n        options = { id: options };\n    }\n\n    options = Object.assign({}, DEFAULT, options);\n\n    options.colors = minMax(options.colors, 1, MAX_COLORS);\n    options.pixels = minMax(options.pixels, 2, MAX_PIXELS);\n    options.size = minMax(options.size, options.pixels, MAX_SIZE);\n    options.size = Math.round(options.size / options.pixels) * options.pixels;\n    options.padding = minMax(options.padding, 0, MAX_PADDING_RATIO * options.size);\n\n    const minIdLength = getMinIdLength(options.pixels, options.colors);\n\n    if (!options.id) {\n        options.id = unsecureRandom(minIdLength);\n    }\n    else {\n        options.id = loopHash(options.hasher, options.id, minIdLength);\n    }\n\n    if (['none', 'horizontal', 'vertical', 'central'].indexOf(options.symmetry) === -1) {\n        options.symmetry = 'none';\n    }\n\n    if (['raw', 'standard', 'bright', 'light', 'dark'].indexOf(options.scheme) === -1) {\n        options.scheme = 'standard';\n    }\n\n    return options;\n}\n\n/**\n * Performs render on a new canvas\n * @param {string[]} colors\n * @param {boolean[]} sq\n * @param {boolean[]} sqc\n * @param {object} options\n * @returns {Canvas}\n */\nfunction render(colors, sq, sqc, options) {\n    let l = 0, c = 0;\n    let ps = options.size / options.pixels;\n    let pad = options.padding;\n    let cs = options.size + 2 * options.padding;\n\n    const canvas = createCanvas(cs, cs);\n    const ctx = canvas.getContext('2d');\n\n    ctx.fillStyle = options.background;\n    ctx.beginPath();\n    ctx.rect(0, 0, cs, cs);\n    ctx.fill();\n\n    for (let i = 0; i < options.pixels * options.pixels; i++) {\n        if (sq[i]) {\n            ctx.fillStyle = sqc[i] ? colors[0] : colors[1];\n            ctx.beginPath();\n            ctx.rect(pad + c * ps, pad + l * ps, ps, ps);\n            ctx.fill();\n        }\n\n        c++;\n        if (c === options.pixels) {\n            c = 0;\n            l++;\n        }\n    }\n\n    return canvas;\n}\n\n/**\n * Returns the buffer or dataURL from a canvas\n * @param {Canvas} canvas\n * @param {Function<String|Buffer>} [callback]\n * @returns {String|Buffer|void}\n */\nfunction finalize(canvas, callback) {\n    if (typeof callback === 'function') {\n        if (canvas.toBuffer) {\n            canvas.toBuffer(callback);\n        }\n        else {\n            callback(null, canvas.toDataURL());\n        }\n    }\n    else {\n        if (canvas.toBuffer) {\n            return canvas.toBuffer();\n        }\n        else {\n            return canvas.toDataURL();\n        }\n    }\n}\n\n/**\n * Read the four bits of each char in the string\n * @param {string} str\n * @returns {boolean[]}\n */\nfunction readbits(str) {\n    let bits = [];\n    for (let i = 0; i < str.length; i++) {\n        let tmp = hexdec(str.substr(i, 1));\n        Array.prototype.push.apply(bits, [(tmp & 8) !== 0, (tmp & 4) !== 0, (tmp & 2) !== 0, (tmp & 1) !== 0]);\n    }\n    return bits;\n}\n\n/**\n * Applies a vertical symmetry\n * @param {Array} squares\n * @param {number} pixels\n */\nfunction verticalSymmetry(squares, pixels) {\n    for (let i = 0; i < pixels; i++) {\n        let tmp = squares.slice(i * pixels, Math.floor((i + 0.5) * pixels));\n        squares.splice(Math.ceil((i + 0.5) * pixels), tmp.length, ...tmp.reverse());\n    }\n}\n\n/**\n * Applies an horizontal symmetry\n * @param {Array} squares\n * @param {number} pixels\n */\nfunction horizontalSymmetry(squares, pixels) {\n    for (let i = 0; i < Math.floor(pixels / 2); i++) {\n        let tmp = squares.slice(i * pixels, (i + 1) * pixels);\n        squares.splice((pixels - 1 - i) * pixels, tmp.length, ...tmp);\n    }\n}\n\n/**\n * Returns a color for a 6 chars string\n * @param {string} str\n * @param {string} scheme\n * @returns {string}\n */\nfunction readcolor(str, scheme) {\n    if (scheme === 'raw') {\n        return '#' + str;\n    }\n    else {\n        return randomColor({\n            seed      : str,\n            luminosity: scheme,\n            format    : 'hex',\n        });\n    }\n}\n\n/**\n * Creates an array with the same value\n * @param {*} value\n * @param {number} length\n * @returns {Array}\n */\nfunction filledarray(value, length) {\n    let out = [];\n    while (out.length < length) {\n        out.push(value);\n    }\n    return out;\n}\n\n/**\n * Generates a squareison\n * @param {object} options\n * @param {Function<String|Buffer>} [callback]\n * @returns {String|Buffer|void}\n */\nfunction squareicon(options, callback) {\n    options = getOptions(options);\n\n    const colorBytes = 6;\n    const pixelsBytes = options.pixels * options.pixels / 4;\n    let idx = 0;\n\n    const colors = [];\n    for (let i = 0; i < options.colors; i++) {\n        colors.push(readcolor(options.id.substr(idx, colorBytes), options.scheme));\n        idx += colorBytes;\n    }\n\n    const squares = readbits(options.id.substr(idx, pixelsBytes));\n    idx += pixelsBytes;\n\n    const squareColors = options.colors === 2 ?\n        readbits(options.id.substr(idx, pixelsBytes)) :\n        filledarray(true, pixelsBytes);\n\n    if (options.symmetry === 'vertical' || options.symmetry === 'central') {\n        verticalSymmetry(squares, options.pixels);\n        verticalSymmetry(squareColors, options.pixels);\n    }\n\n    if (options.symmetry === 'horizontal' || options.symmetry === 'central') {\n        horizontalSymmetry(squares, options.pixels);\n        horizontalSymmetry(squareColors, options.pixels);\n    }\n\n    const canvas = render(colors, squares, squareColors, options);\n\n    return finalize(canvas, callback);\n}\n\nmodule.exports = squareicon;\nsquareicon.DEFAULT = DEFAULT;\n"],"names":["width","height","Object","assign","document","createElement","MAX_COLORS","MAX_PIXELS","MAX_SIZE","MAX_PADDING_RATIO","DEFAULT","id","hasher","md5","colors","pixels","size","padding","symmetry","scheme","background","unsecureRandom","length","out","Math","random","toString","substr","loopHash","str","i","minMax","val","min","max","hexdec","parseInt","getMinIdLength","getOptions","options","round","minIdLength","indexOf","render","sq","sqc","l","c","ps","pad","cs","canvas","createCanvas","ctx","getContext","fillStyle","beginPath","rect","fill","finalize","callback","toBuffer","toDataURL","readbits","bits","tmp","Array","prototype","push","apply","verticalSymmetry","squares","slice","floor","splice","ceil","reverse","horizontalSymmetry","readcolor","randomColor","seed","luminosity","format","filledarray","value","squareicon","colorBytes","pixelsBytes","idx","squareColors"],"mappings":"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"}